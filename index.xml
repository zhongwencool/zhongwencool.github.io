<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>🪴 札记 on</title><link>https://zhongwencool.github.io/</link><description>Recent content in 🪴 札记 on</description><generator>Hugo -- gohugo.io</generator><language>en-us</language><atom:link href="https://zhongwencool.github.io/index.xml" rel="self" type="application/rss+xml"/><item><title/><link>https://zhongwencool.github.io/elixir_every_alchemist_should_know/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://zhongwencool.github.io/elixir_every_alchemist_should_know/</guid><description/></item><item><title>Configuration</title><link>https://zhongwencool.github.io/notes/config/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://zhongwencool.github.io/notes/config/</guid><description>Configuration Quartz is designed to be extremely configurable. You can find the bulk of the configuration scattered throughout the repository depending on how in-depth you&amp;rsquo;d like to get.</description></item><item><title>Deploying Quartz to the Web</title><link>https://zhongwencool.github.io/notes/hosting/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://zhongwencool.github.io/notes/hosting/</guid><description>GitHub Pages Quartz is designed to be effortless to deploy. If you forked and cloned Quartz directly from the repository, everything should already be good to go!</description></item><item><title>Editing Content in Quartz</title><link>https://zhongwencool.github.io/notes/editing/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://zhongwencool.github.io/notes/editing/</guid><description>Editing Quartz runs on top of Hugo so all notes are written in Markdown .
Obsidian I strongly recommend using Obsidian as a way to edit and grow your digital garden.</description></item><item><title>Erlang Logger设计</title><link>https://zhongwencool.github.io/notes/logger-design/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://zhongwencool.github.io/notes/logger-design/</guid><description> 日志在每个应用中都是至关重要， 是排查问题的得力助手。打印日志看起来是一件非常简单的事性。本人写Erlang第一个程序就是HelloWorld就是输出到标准输出（控制台）的日志， 在测试开发环境，使用io:format/2来调试的做法都不会带来性能问题。但是在生产环境下，必须要有日志做持久化，并把有效的信息（时间戳，调用栈，出错行数等）都保留下来。
从磁盘中读
TODO：- [发消息与读ETS间的对比速度] 每个进程极退TPS要发多少的消息。
structure logger 性能测试</description></item><item><title>GitHub Pull Request 入门</title><link>https://zhongwencool.github.io/notes/github-pull-request/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://zhongwencool.github.io/notes/github-pull-request/</guid><description>编程的乐趣是什么？ 人的成就感来源于两样东西，创造与毁灭 。
没有什么能比用一个伟大的 Pull Request(PR) 展示自己炉火纯青的编码功力，更让人着迷。本文将详细介绍创建 Pull Request 时应该要掌握的知识。
文未的 实战环节 ，会一步步指引你提交PR把自己的名字署在文末，快来完成自己的第一个 PR 吧~
如何挑选项目(Finding) 有部分人会止步于找不到适合自己的项目，而迟迟不动手。其实多关注平时项目使用的第三方库，就可能会发现测试/文档还可以更完善，更进一步还可以为它改进/增添新功能。这些可以把你从围观者逐渐变成一个推动者。当然，参与开源项目应该是一个完全自然且合乎逻辑的过程，发现一个认为能它变得更好的地方，优化它。如果你从来不使用其他人的项目，可能你才刚开始编程，继续练习，将来一定会尝试使用更多开源项目的。
先问(Asking) 当你为项目找到一个非常值得添加的功能时，不要迫不及待地把代码 clone 下来，然后一顿操作后，发起 PR。可能别人也想到(或者更好的方案)，并且已经在为之努力，又或者维护者有不想加入这个特性的其它考虑。所以为了保证自己不白费心劳力，可以在已有的 issues 中找找相关内容的讨论。如果没有，可以新建 issue 来讨论这个需求，提问的过程也可以帮助自己理清思路。</description></item><item><title>Git撤消概括</title><link>https://zhongwencool.github.io/notes/git-undo/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://zhongwencool.github.io/notes/git-undo/</guid><description>I.Git撤消之谜 Stackoverflow按投票(votes)排序搜索git ，前15+的问题全部都是一个主题：求解各式各样的撤消。Github也早在2015年就贴心地把git常见撤消分类总结成简单易懂的情景再现: How to undo(almost) anything with git 。可见初学者对git撤消是有很多疑惑点。不过，不论是Stackoverflow还是Github都侧重针对具体问题/场景提出纠正流程，虽然受益良多，但是总感觉太零碎，没能连成系统，于是就有了这篇总结。
II.Git工作区/暂存区/版本库 工作区(work space)：就是你可以直接查看和编辑的文件目录。 暂存区(index)：是单个大型二进制文件(.git/index)，它描述了当前分支上所有的文件的sha1校验/时间戳/文件名。它并不是一个别一个类似工作区的副本。 版本库(repository)：它隐藏于*.git/objects*下，包涵了每一个文件(本地和远程)的所有版本。 所以：不要将上图中表示的4个磁盘视为repo文件的单独副本。
从上图的流程可以看出，撤消无非就是分成四大类：</description></item><item><title>Ignoring Notes</title><link>https://zhongwencool.github.io/notes/ignore-notes/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://zhongwencool.github.io/notes/ignore-notes/</guid><description>Quartz Ignore Edit ignoreFiles in config.toml to include paths you&amp;rsquo;d like to exclude from being rendered.
1 2 3 4 5 6 .</description></item><item><title>Linux负载</title><link>https://zhongwencool.github.io/notes/load_average/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://zhongwencool.github.io/notes/load_average/</guid><description>通过top或uptime都可以查看到操作系统的CPU的1分钟/5分钟/15分钟的负载情况。
1 2 uptime 22:08:52 up 171 days, 12:03, 1 user, load average: 0.00, 0.01, 0.05 CPU load average的平均值是如何被计算出来的？</description></item><item><title>Obsidian Vault Integration</title><link>https://zhongwencool.github.io/notes/obsidian/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://zhongwencool.github.io/notes/obsidian/</guid><description>Setup Obsidian is the preferred way to use Quartz. You can either create a new Obsidian Vault or link one that your already have.</description></item><item><title>Preview Changes</title><link>https://zhongwencool.github.io/notes/preview-changes/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://zhongwencool.github.io/notes/preview-changes/</guid><description>If you&amp;rsquo;d like to preview what your Quartz site looks like before deploying it to the internet, here&amp;rsquo;s exactly how to do that!</description></item><item><title>Quartz Philosophy</title><link>https://zhongwencool.github.io/notes/philosophy/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://zhongwencool.github.io/notes/philosophy/</guid><description>“[One] who works with the door open gets all kinds of interruptions, but [they] also occasionally gets clues as to what the world is and what might be important.</description></item><item><title>Setup</title><link>https://zhongwencool.github.io/notes/setup/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://zhongwencool.github.io/notes/setup/</guid><description>Making your own Quartz Setting up Quartz requires a basic understanding of git. If you are unfamiliar, this resource is a great place to start!</description></item><item><title>Showcase</title><link>https://zhongwencool.github.io/moc/showcase/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://zhongwencool.github.io/moc/showcase/</guid><description>Want to see what Quartz can do? Here are some cool community gardens :)
Quartz Documentation (this site!) Strengthening Online Social Bonds: Research Garden Jacky Zhao&amp;rsquo;s Garden Anson Yu&amp;rsquo;s Garden Shihyu&amp;rsquo;s PKM Chloe&amp;rsquo;s Garden SlRvb&amp;rsquo;s Site Course notes for Information Technology Advanced Theory If you want to see your own on here, submit a Pull Request adding yourself to this file !</description></item><item><title>Troubleshooting and FAQ</title><link>https://zhongwencool.github.io/notes/troubleshooting/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://zhongwencool.github.io/notes/troubleshooting/</guid><description>Common Pitfalls Some of my pages have &amp;lsquo;January 1, 0001&amp;rsquo; as the last modified date This is a problem caused by git treating files as case-insensitive by default and some of your posts probably have capitalized file names.</description></item></channel></rss>